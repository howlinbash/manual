


LVM on LUKS
-----------

The straight-forward method is to set up [ LVM ] on top of the encrypted 
partition instead of the other way round. Technically the LVM is setup inside 
one big encrypted blockdevice. Hence, the LVM is not transparent until the 
blockdevice is unlocked and the underlying volume structure is scanned and 
mounted during boot.

The disk layout in this example is:

  +-----------------------------------------------------------------------+ ~ 
  | Logical volume1       | Logical volume2       | Logical volume3       | ~ 
  |/dev/mapper/MyVol-swap |/dev/mapper/MyVol-root |/dev/mapper/MyVol-home | ~ 
  |_ _ _ _ _ _ _ _ _ _ _ _|_ _ _ _ _ _ _ _ _ _ _ _|_ _ _ _ _ _ _ _ _ _ _ _| ~ 
  |                                                                       | ~ 
  |                        LUKS encrypted partition                       | ~ 
  |                          /dev/sdaX                                    | ~ 
  +-----------------------------------------------------------------------+ ~ 
  
  ~ +----------------+
  ~ |                |
  ~ | Boot partition |
  ~ | (may be on     |
  ~ | other device)  |
  ~ |                |
  ~ | /dev/sdbY      |
  ~ +----------------+

This method does not allow you to span the logical volumes over multiple disks, 
even in the future. The #LUKS on LVM method does not have this limitation.

  Tip: Two variants of this setup:

    Instructions at [ Dm-crypt/Specialties#Encrypted system using a remote LUKS 
    header ] use this setup with a remote LUKS header on a USB device to achieve 
    a two factor authentication with it.

    Instructions at [ Pavel Kogan's blog ] show how to encrypt the /boot 
    partition while keeping it on the main LUKS partition when using GRUB, but 
    be aware of [ FS#43663 ].



Preparing the disk
------------------

Prior to creating any partitions, you should inform yourself about the 
importance and methods to securely erase the disk, described in 
[ Dm-crypt/Drive preparation ].

When using the [ GRUB ] bootloader together with [ GPT ], create a BIOS Boot 
Partition as explained in [ GRUB#BIOS systems ].

Create a partition to be mounted at "/boot" of type "8300" with a size of 100 
MB or more.

Create a partition of type "8E00", which will later contain the encrypted 
container.

Create the LUKS encrypted container at the "system" partition. Enter the 
chosen password twice.

  # cryptsetup luksFormat /dev/sdaX

For more information about the available cryptsetup options see the [ LUKS 
encryption options ] prior to above command.

Open the container:

  # cryptsetup open --type luks /dev/sdaX lvm

The decrypted container is now available at "/dev/mapper/lvm".



Preparing the logical volumes
-----------------------------

Create a physical volume on top of the opened LUKS container:

  # pvcreate /dev/mapper/lvm

Create the volume group named "MyVol" (or whatever you want), adding the 
previously created physical volume to it:

  # vgcreate MyVol /dev/mapper/lvm

Create all your logical volumes on the volume group:

  # lvcreate -L 8G MyVol -n swap
  # lvcreate -L 15G MyVol -n root
  # lvcreate -l 100%FREE MyVol -n home

Format your filesystems on each logical volume:

  # mkfs.ext4 /dev/mapper/MyVol-root
  # mkfs.ext4 /dev/mapper/MyVol-home
  # mkswap /dev/mapper/MyVol-swap

Mount your filesystems:

  # mount /dev/mapper/MyVol-root /mnt
  # mkdir /mnt/home
  # mount /dev/mapper/MyVol-home /mnt/home
  # swapon /dev/mapper/MyVol-swap



Preparing the boot partition
----------------------------

The bootloader loads the kernel, [ initramfs ], and its own configuration 
files from the "/boot" directory. This directory must be located on a separate 
unencrypted filesystem.

Create an Ext2 filesystem on the partition intended for "/boot." Any 
filesystem that can be read by the bootloader is eligible.

  # mkfs.ext2 /dev/sdbY

Create the directory "/mnt/boot":

  # mkdir /mnt/boot

Mount the partition to "/mnt/boot":

  # mount /dev/sdbY /mnt/boot

Afterwards continue with the installation procedure up to the "mkinitcpio" step.



Configuring mkinitcpio
----------------------

Add the "encrypt" and "lvm2" hooks to [ mkinitcpio.conf ]:

  /etc/mkinitcpio.conf
  
  HOOKS="... encrypt lvm2 ... filesystems ..."

See [ dm-crypt/System configuration#mkinitcpio ] for details and other hooks 
that you may need.



Configuring the boot loader
---------------------------

In order to unlock the encrypted root partition at boot, the following kernel 
parameters need to be set by the boot loader:

  cryptdevice=UUID=device-UUID:lvm root=/dev/mapper/MyVol-root

The "<device-UUID>" refers to the UUID of "/dev/sdaX", see [ Persistent block 
device naming ] for details.

See [ Dm-crypt/System configuration#Boot loader ] for details.

